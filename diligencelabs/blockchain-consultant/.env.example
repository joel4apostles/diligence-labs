# Environment variables declared in this file are automatically made available to Prisma.
# Copy this file to .env and fill in your actual values
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Database
DATABASE_URL="your-database-url-here"

# NextAuth.js
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="your-nextauth-secret-here-generate-with-openssl-rand-base64-32"

# OAuth Providers (Add your own keys)
GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_CLIENT_SECRET="your-google-client-secret"

TWITTER_CLIENT_ID="your-twitter-client-id"
TWITTER_CLIENT_SECRET="your-twitter-client-secret"

GITHUB_CLIENT_ID="your-github-client-id"
GITHUB_CLIENT_SECRET="your-github-client-secret"

# Stripe Payment Processing
STRIPE_SECRET_KEY="sk_test_your-stripe-secret-key"
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_your-stripe-publishable-key"

# Email Service (optional)
SMTP_HOST="your-smtp-host"
SMTP_PORT="587"
SMTP_USER="your-smtp-username"
SMTP_PASS="your-smtp-password"

# Admin Configuration
ADMIN_EMAILS="admin@yourcompany.com,admin2@yourcompany.com"

# Privy Configuration (for Web3 auth)
NEXT_PUBLIC_PRIVY_APP_ID="your-privy-app-id"

# End-to-End Encryption Configuration
# Generate these with: node -e "const crypto = require('crypto'); console.log('ENCRYPTION_MASTER_KEY=' + crypto.randomBytes(32).toString('hex')); console.log('KEY_DERIVATION_SALT=' + crypto.randomBytes(32).toString('hex'))"
ENCRYPTION_MASTER_KEY="your-256-bit-master-key-in-hex-64-chars"
KEY_DERIVATION_SALT="your-256-bit-salt-in-hex-64-chars"

# Field-level encryption control (set to 'false' to disable)
ENABLE_FIELD_ENCRYPTION="true"

# Client-side encryption settings
NEXT_PUBLIC_CLIENT_ENCRYPTION_ENABLED="true"